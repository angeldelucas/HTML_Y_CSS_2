:where(main):has(.input) {
    container-type: inline-size;
}

// :where tiene especifidad 0, por tanto :is siempre se a aplicar cuando
// se cumpla la @container querie. Si intercambio where por is para la clase input
// nunca se aplicaría la regla definida dentro de la @container querie puesto que :is
// siempre estaría por encima.
:where(.input) {
    width: 100%;
    padding: 1%;
    display: flex;
    flex-direction: column;
    align-items: center;
}


:is(.input) {

    @container (min-width: 992px) {
        @include width($cook-master-breakpoints);
        display: grid;
        grid-template-columns: 70% 30%;
        align-items: flex-start;
        justify-content: center;
        column-gap: 2%;

        .input__main-article {
            grid-column-start: 1;
        }
    }
}

.input__main-article:has(section) {
    >section {
        padding-bottom: 2%;
        background-color: $corporative-secondary-bacground;
    }
}

.input__recents-articles:has(section) {
    >section {
        padding-bottom: 2%;
        margin-bottom: 4%;
        background-color: $corporative-secondary-bacground;
    }
}

.recents-articles__article:has(div>h3>a) {
    div>h3>a {
        text-decoration: none;

        &:hover {
            color: $corporative-color-hover;
        }
    }
}

.main-article__section:has(blockquote) {
    >blockquote {
        @include blockquote-format();
    }
}


// :is tiene mayor especificidad que :where puesto que :where deja a 0 
// la especificidad de los elementos indicados en la pseudoclase. Con las layers
// se consigue aplicar una especificidad mayor a la layer desktop frente a la mobile
@layer mobile, destokp;

@layer mobile {
    :is(.input__recents-articles) {
        margin-top: 10%;
        display: flex;
        flex-direction: column;

        >h2 {
            top: -5%;
        }

        >section:nth-child(3) {
            margin-right: 2%;
            margin-left: 2%;
        }
    }
}

@layer destokp {

    @container (min-width: 576px) and (max-width: 768px) {
        :where(.input__recents-articles) {
            flex-direction: row;

            >h2 {
                top: -20%;
            }
        }
    }
}